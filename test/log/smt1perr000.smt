(benchmark fuzz17788
:logic QF_BV
:extrafuns ((v0 BitVec[5]))
:extrafuns ((v1 BitVec[0]))
:extrafuns ((v2 BitVec[16]))
:extrafuns ((v3 BitVec[16]))
:extrafuns ((v4 BitVec[2]))
:formula
(let (?e5 bv1[1])
(let (?e6 bv0[1])
(let (?e7 bv26[5])
(let (?e8 bv1550[12])
(let (?e9 (bvsmod v4 (sign_extend[1] ?e6)))
(let (?e10 (sign_extend[5] v0))
(let (?e11 (ite (bvuge v2 (sign_extend[4] ?e8)) bv1[1] bv0[1]))
(let (?e12 (bvxnor (sign_extend[11] ?e6) ?e8))
(let (?e13 (bvadd (zero_extend[11] ?e5) ?e12))
(let (?e14 (rotate_right[0] ?e11))
(let (?e15 (bvlshr v4 (zero_extend[1] ?e5)))
(let (?e16 (bvnor (sign_extend[10] ?e15) ?e12))
(let (?e17 (bvneg ?e10))
(let (?e18 (sign_extend[0] ?e6))
(let (?e19 (rotate_left[1] v4))
(let (?e20 (ite (bvsle ?e7 v0) bv1[1] bv0[1]))
(let (?e21 (bvsrem ?e13 ?e12))
(let (?e22 (bvshl (zero_extend[10] ?e15) ?e16))
(let (?e23 (bvcomp (sign_extend[9] ?e14) ?e10))
(let (?e24 (bvmul ?e19 (sign_extend[1] ?e20)))
(let (?e25 (ite (bvule ?e23 ?e6) bv1[1] bv0[1]))
(let (?e26 (bvnor v3 (zero_extend[6] ?e17)))
(let (?e27 (concat ?e16 ?e14))
(let (?e28 (bvxor ?e27 (zero_extend[12] ?e23)))
(let (?e29 (rotate_right[0] ?e20))
(let (?e30 (ite (bvsgt v1 (sign_extend[7] ?e5)) bv1[1] bv0[1]))
(let (?e31 (ite (bvsgt ?e28 (sign_extend[12] ?e18)) bv1[1] bv0[1]))
(let (?e32 (ite (bvugt ?e22 (sign_extend[10] ?e24)) bv1[1] bv0[1]))
(let (?e33 (ite (bvsge ?e26 (sign_extend[15] ?e25)) bv1[1] bv0[1]))
(let (?e34 (ite (bvsge ?e30 ?e29) bv1[1] bv0[1]))
(let (?e35 (ite (bvsgt ?e9 ?e9) bv1[1] bv0[1]))
(let (?e36 (ite (bvslt ?e21 ?e21) bv1[1] bv0[1]))
(let (?e37 (= ?e33 ?e5))
(let (?e38 (= ?e32 ?e5))
(let (?e39 (= ?e31 ?e5))
(let (?e40 (= ?e36 ?e5))
(let (?e41 (= ?e35 ?e5))
(let (?e42 (= ?e34 ?e5))
(let (?e43 (iff ?e39 ?e38))
(let (?e44 (and ?e42 ?e37))
(let (?e45 (xor ?e40 ?e41))
(let (?e46 (not ?e44))
(let (?e47 (= ?e45 ?e43))
(let (?e48 (xor ?e46 ?e47))
(and ?e48 true)
)))))))))))))))))))))))))))))))))))))))))))))
